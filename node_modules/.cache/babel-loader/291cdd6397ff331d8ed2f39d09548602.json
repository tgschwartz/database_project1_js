{"ast":null,"code":"import _slicedToArray from \"/Users/tovaschwartz/Documents/CCNY_DSE/Fall_2020/Database/project1/database_project1_js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tovaschwartz/Documents/CCNY_DSE/Fall_2020/Database/project1/database_project1_js/src/App.js\";\nimport React, { useEffect } from \"react\";\nimport \"./styles.css\";\nimport { useImmer } from \"use-immer\";\n\nvar DressesApp = () => {\n  var _useImmer = useImmer({\n    filterType: \"all\",\n    dresses: [],\n    customers: []\n  }),\n      _useImmer2 = _slicedToArray(_useImmer, 2),\n      appState = _useImmer2[0],\n      updateState = _useImmer2[1];\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/dresses\").then(response => response.json()).then(json => {\n      updateState(draft => {\n        draft.dresses = json.dresses;\n      });\n    });\n  }, []);\n\n  var Dress = ({\n    id,\n    dress_name,\n    dress_size,\n    available\n  }) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      style: {\n        textDecoration: available ? \"line-through\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, \"Dress: \" + dress_name + \" | size: \" + dress_size);\n  };\n\n  var DressForm = ({\n    dressAction\n  }) => {\n    // variable to hold a reference to the input\n    var dressNameInput;\n    var dressSizeInput;\n\n    var handleSubmit = event => {\n      event.preventDefault();\n      dressAction(dressNameInput.value, dressSizeInput.value);\n      dressNameInput.value = \"\";\n      dressSizeInput.value = \"\";\n    };\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: r => dressNameInput = r,\n      type: \"text\",\n      placeholder: \"Dress Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      ref: r => dressSizeInput = r,\n      type: \"text\",\n      placeholder: \"Dress Size\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var createDressAPI = (dress_name, dress_size) => {\n    return fetch(\"http://localhost:5000/dresses\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        dress_name: dress_name,\n        dress_size: dress_size,\n        available: true\n      })\n    }).then(response => response.json()).then(json => json.dress);\n  };\n\n  var createDress = (name, size) => {\n    createDressAPI(name, size).then(dress => {\n      updateState(draft => {\n        draft.dresses.push({\n          id: dress.id,\n          dress_name: dress.dress_name,\n          dress_size: dress.dress_size,\n          available: dress.available\n        });\n      });\n    });\n  };\n\n  var ReturnedFilter = ({\n    filterType,\n    setFilterType\n  }) => /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, [\"all\", \"available\", \"rented\"].map((status, i) => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setFilterType(status),\n      disabled: appState.filterType === status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, status);\n  }));\n\n  var filteredDresses = () => {\n    if (appState.filterType === \"all\") {\n      return appState.dresses;\n    } else if (appState.filterType === \"rented\") {\n      return appState.dresses.filter(dress => dress.available === false);\n    } else if (appState.filterType === \"available\") {\n      return appState.dresses.filter(dress => dress.available === true);\n    }\n  };\n\n  var setFilterType = filterType => {\n    updateState(draft => {\n      draft.filterType = filterType;\n    });\n  };\n\n  var Customer = ({\n    id,\n    first_name,\n    last_name,\n    phone_number,\n    size,\n    wedding_date\n  }) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, \"ID: \" + id + \", Name: \" + first_name + \" \" + last_name);\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/customers\").then(response => response.json()).then(json => {\n      updateState(draft => {\n        draft.customers = json.customers;\n      });\n    });\n  }, []);\n\n  var CustomerForm = ({\n    customerAction\n  }) => {\n    // variable to hold a reference to the input\n    var customerFirstNameInput;\n    var customerLastNameInput;\n    var customerPhoneInput;\n    var customerSizeInput;\n    var customerDateInput;\n\n    var handleSubmitCustomer = event => {\n      event.preventDefault();\n      customerAction(customerFirstNameInput.value, customerLastNameInput.value, customerPhoneInput.value, customerSizeInput.value, customerDateInput.value);\n      customerFirstNameInput.value = \"\";\n      customerLastNameInput.value = \"\";\n      customerPhoneInput.value = \"\";\n      customerSizeInput.value = \"\";\n      customerDateInput.value = \"\";\n    };\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmitCustomer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: r => customerFirstNameInput = r,\n      type: \"text\",\n      placeholder: \"First Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      ref: r => customerLastNameInput = r,\n      type: \"text\",\n      placeholder: \"Last Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      ref: r => customerPhoneInput = r,\n      type: \"text\",\n      placeholder: \"Phone Number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      ref: r => customerSizeInput = r,\n      type: \"text\",\n      placeholder: \"Size\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      ref: r => customerDateInput = r,\n      type: \"text\",\n      placeholder: \"Wedding Date: MM/DD/YYYY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  var createCustomerAPI = (first_name, last_name, phone_number, size, wedding_date) => {\n    return fetch(\"http://localhost:5000/customers\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        first_name: first_name,\n        last_name: last_name,\n        phone_number: phone_number,\n        size: size,\n        wedding_date: wedding_date\n      })\n    }).then(response => response.json()).then(json => json.customer);\n  };\n\n  var createCustomer = (first_name, last_name, phone_number, size, wedding_date) => {\n    createCustomerAPI(first_name, last_name, phone_number, size, wedding_date).then(customer => {\n      updateState(draft => {\n        draft.customers.push({\n          id: customer.id,\n          first_name: customer.first_name,\n          last_name: customer.last_name,\n          phone_number: customer.phone_number,\n          size: customer.size,\n          wedding_date: customer.wedding_date\n        });\n      });\n    });\n  }; // const toggleDress = (id) => {\n  //   updateState((draft) => {\n  //     if (draft.dresses[id].returned === false) {\n  //       draft.dresses[id].returned = true;\n  //     } else if (draft.dresses[id].returned === true) {\n  //       draft.dresses[id].returned = false;\n  //     }\n  //   });\n  // };\n  // uncomment out JSX blocks as you solve each problem\n  // to uncomment, remove the enclosing '{/*' and '*/}'\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, \" Add a Dress \"), /*#__PURE__*/React.createElement(DressForm, {\n    dressAction: createDress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }, \" Dresses \"), /*#__PURE__*/React.createElement(ReturnedFilter, {\n    filterType: appState.filterType,\n    setFilterType: setFilterType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, filteredDresses().map(dress => /*#__PURE__*/React.createElement(Dress, {\n    id: dress.id,\n    dress_name: dress.dress_name,\n    dress_size: dress.dress_size,\n    available: dress.available //toggleDress={() => toggleDress(dress.id)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, \" Add a Customer \"), /*#__PURE__*/React.createElement(CustomerForm, {\n    customerAction: createCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, \" Customers \"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }, appState.customers.map(customer => /*#__PURE__*/React.createElement(Customer, {\n    id: customer.id,\n    first_name: customer.first_name,\n    last_name: customer.last_name,\n    phone_number: customer.phone_number,\n    size: customer.size,\n    wedding_date: customer.wedding_date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default function App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DressesApp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/tovaschwartz/Documents/CCNY_DSE/Fall_2020/Database/project1/database_project1_js/src/App.js"],"names":["React","useEffect","useImmer","DressesApp","filterType","dresses","customers","appState","updateState","fetch","then","response","json","draft","Dress","id","dress_name","dress_size","available","textDecoration","DressForm","dressAction","dressNameInput","dressSizeInput","handleSubmit","event","preventDefault","value","r","createDressAPI","method","headers","body","JSON","stringify","dress","createDress","name","size","push","ReturnedFilter","setFilterType","map","status","i","filteredDresses","filter","Customer","first_name","last_name","phone_number","wedding_date","CustomerForm","customerAction","customerFirstNameInput","customerLastNameInput","customerPhoneInput","customerSizeInput","customerDateInput","handleSubmitCustomer","createCustomerAPI","customer","createCustomer","App"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./styles.css\";\n\nimport { useImmer } from \"use-immer\";\n\nconst DressesApp = () => {\n  const [appState, updateState] = useImmer({\n    filterType: \"all\",\n    dresses: [],\n    customers: []\n  });\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/dresses\")\n      .then(response => response.json())\n      .then(json => {\n        updateState(draft => {\n          draft.dresses = json.dresses;\n        });\n      });\n  }, []);\n\n  const Dress = ({id, dress_name, dress_size, available}) => {\n    return (\n      <li\n        style={{\n          textDecoration: available ? \"line-through\" : \"none\"\n        }}\n      >\n        {\"Dress: \" + dress_name + \" | size: \" + dress_size}\n      </li>\n    );\n  };\n\n  const DressForm = ({ dressAction }) => {\n    // variable to hold a reference to the input\n    let dressNameInput;\n    let dressSizeInput;\n\n    const handleSubmit = (event) => {\n      event.preventDefault();\n      dressAction(dressNameInput.value, dressSizeInput.value);\n      dressNameInput.value = \"\";\n      dressSizeInput.value = \"\";\n    };\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <input ref={(r) => (dressNameInput = r)} type=\"text\" placeholder=\"Dress Name\"/>\n        <br></br>\n        <input ref={(r) => (dressSizeInput = r)} type=\"text\" placeholder=\"Dress Size\"/>\n        <br></br>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  };\n\n  const createDressAPI = (dress_name, dress_size) => {\n    return fetch(\"http://localhost:5000/dresses\", {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({\n        dress_name: dress_name,\n        dress_size: dress_size,\n        available: true\n      })\n    })\n      .then(response => response.json())\n      .then(json => json.dress);\n  };\n\n  const createDress = (name, size) => {\n    createDressAPI(name, size).then(dress => {\n      updateState((draft) => {\n        draft.dresses.push({\n          id: dress.id,\n          dress_name: dress.dress_name,\n          dress_size: dress.dress_size,\n          available: dress.available\n        });\n      });\n    })\n  };\n\n  const ReturnedFilter = ({ filterType, setFilterType }) => (\n    <span>\n      {[\"all\", \"available\", \"rented\"].map((status, i) => {\n        return (\n          <button\n            onClick={() => setFilterType(status)}\n            disabled={appState.filterType === status}\n          >\n            {status}\n          </button>\n        );\n      })}\n    </span>\n  );\n\n  const filteredDresses = () => {\n    if (appState.filterType === \"all\") {\n      return appState.dresses;\n    } else if (appState.filterType === \"rented\") {\n      return appState.dresses.filter((dress) => dress.available === false);\n    } else if (appState.filterType === \"available\") {\n      return appState.dresses.filter((dress) => dress.available === true);\n    }\n  };\n\n  const setFilterType = (filterType) => {\n    updateState((draft) => {\n      draft.filterType = filterType;\n    });\n  };\n\n  const Customer = ({id, first_name, last_name, phone_number, size, wedding_date}) => {\n    return (\n      <li>\n        {\"ID: \" + id + \", Name: \" + first_name + \" \" + last_name}\n      </li>\n    );\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/customers\")\n      .then(response => response.json())\n      .then(json => {\n        updateState(draft => {\n          draft.customers = json.customers;\n        });\n      });\n  }, []);\n\n  const CustomerForm = ({ customerAction }) => {\n    // variable to hold a reference to the input\n    let customerFirstNameInput;\n    let customerLastNameInput;\n    let customerPhoneInput;\n    let customerSizeInput;\n    let customerDateInput;\n\n    const handleSubmitCustomer = (event) => {\n      event.preventDefault();\n      customerAction(customerFirstNameInput.value,\n                     customerLastNameInput.value,\n                     customerPhoneInput.value,\n                     customerSizeInput.value,\n                     customerDateInput.value);\n      customerFirstNameInput.value = \"\";\n      customerLastNameInput.value = \"\";\n      customerPhoneInput.value = \"\";\n      customerSizeInput.value = \"\";\n      customerDateInput.value = \"\";\n    };\n\n    return (\n      <form onSubmit={handleSubmitCustomer}>\n      <input ref={(r) => (customerFirstNameInput = r)} type=\"text\" placeholder=\"First Name\"/>\n      <br></br>\n      <input ref={(r) => (customerLastNameInput = r)} type=\"text\" placeholder=\"Last Name\"/>\n      <br></br>\n      <input ref={(r) => (customerPhoneInput = r)} type=\"text\" placeholder=\"Phone Number\"/>\n      <br></br>\n      <input ref={(r) => (customerSizeInput = r)} type=\"text\" placeholder=\"Size\"/>\n      <br></br>\n      <input ref={(r) => (customerDateInput = r)} type=\"text\" placeholder=\"Wedding Date: MM/DD/YYYY\"/>\n      <br></br>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>     \n    );\n  };\n\n\n  const createCustomerAPI = (first_name, last_name, phone_number, size, wedding_date) => {\n    return fetch(\"http://localhost:5000/customers\", {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({\n        first_name: first_name,\n        last_name: last_name,\n        phone_number: phone_number,\n        size: size,\n        wedding_date: wedding_date\n      })\n    })\n      .then(response => response.json())\n      .then(json => json.customer);\n  };\n\n  const createCustomer = (first_name, last_name, phone_number, size, wedding_date) => {\n    createCustomerAPI(first_name, last_name, phone_number, size, wedding_date).then(customer => {\n      updateState((draft) => {\n        draft.customers.push({\n          id: customer.id,\n          first_name: customer.first_name,\n          last_name: customer.last_name,\n          phone_number: customer.phone_number,\n          size: customer.size,\n          wedding_date: customer.wedding_date\n        });\n      });\n    })\n  };\n\n  // const toggleDress = (id) => {\n  //   updateState((draft) => {\n  //     if (draft.dresses[id].returned === false) {\n  //       draft.dresses[id].returned = true;\n  //     } else if (draft.dresses[id].returned === true) {\n  //       draft.dresses[id].returned = false;\n  //     }\n  //   });\n  // };\n\n  \n\n  // uncomment out JSX blocks as you solve each problem\n  // to uncomment, remove the enclosing '{/*' and '*/}'\n  return (\n    <div>\n      <h3> Add a Dress </h3>\n      {<DressForm dressAction={createDress} />}\n\n      <h3> Dresses </h3>\n      {\n        <ReturnedFilter\n          filterType={appState.filterType}\n          setFilterType={setFilterType}\n        />\n      }\n      <ul>\n        {filteredDresses().map((dress) => (\n          <Dress\n            id={dress.id}\n            dress_name={dress.dress_name}\n            dress_size={dress.dress_size}\n            available={dress.available}\n            //toggleDress={() => toggleDress(dress.id)}\n          />\n        ))}\n      </ul>\n\n      <h3> Add a Customer </h3>\n      {<CustomerForm customerAction={createCustomer} />}\n\n      <h3> Customers </h3>\n      <ul>\n        {appState.customers.map((customer) => (\n          <Customer\n            id={customer.id}\n            first_name={customer.first_name}\n            last_name={customer.last_name}\n            phone_number={customer.phone_number}\n            size={customer.size}\n            wedding_date={customer.wedding_date}/>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <DressesApp />\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}